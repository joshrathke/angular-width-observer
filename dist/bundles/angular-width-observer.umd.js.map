{"version":3,"file":"angular-width-observer.umd.js","sources":["~/angular-width-observer/ts/angular-width-observer.module.ts","~/angular-width-observer/ts/angular-width-observer.directive.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\n// Import Angular Component Width Observer Directive\n\nimport { AngularWidthObserverDirective } from './angular-width-observer.directive';\nexport class AngularWidthObserverModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    AngularWidthObserverDirective\n  ],\n  exports: [\n    AngularWidthObserverDirective\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AngularWidthObserverModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAngularWidthObserverModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAngularWidthObserverModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, EventEmitter, Input, OnInit, Output, AfterViewInit, ElementRef } from '@angular/core';\n// Import RxJs Dependencies\n\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/operator/distinctUntilChanged';\n\n// Define Command Module Width Type\nexport interface AngularWidthObserverOptions { breakpoints: object, max: string }\nexport class AngularWidthObserverDirective implements OnInit {\n\t AngularWidthObserverOptions: AngularWidthObserverOptions = null;\n\t UpdateElementPixelWidth: EventEmitter<number> = new EventEmitter<number>();\n\t UpdateElementWidth: EventEmitter<string> = new EventEmitter<string>();\nprivate ElementPixelWidth: Subject<number> = new Subject<number>();\nprivate ElementWidth: Subject<string> = new Subject<string>();\n/**\n * @param {?} Element\n */\nconstructor(\nprivate Element: ElementRef\n\t) { }\n/**\n * @return {?}\n */\nngOnInit() {\n\n\t\t// Subscribe to the Pixel Width of the Element\n\t\tthis.watchElementPixelWidth()\n\t\t\t.distinctUntilChanged((_PrevValue, _CurValue) => _PrevValue === _CurValue)\n\t\t\t.subscribe(_ElementPixelWidth => {\n\t\t\t\tconsole.log(_ElementPixelWidth);\n\t\t\t\t// Emit the Element Pixel Width\n\t\t\t\tthis.UpdateElementPixelWidth.emit(_ElementPixelWidth);\n\t\t\t\t// Define the Command Module Width Classification\n\t\t\t\tthis.setElementWidth(this.calculateElementWidth(_ElementPixelWidth));\n\t\t\t})\n\n\t\t// Subscribe to the Width\n\t\tthis.watchElementWidth()\n\t\t\t.distinctUntilChanged((_PrevValue, _CurValue) => _PrevValue === _CurValue)\n\t\t\t.subscribe(_ElementWidth => {\n\t\t\t\tconsole.log(_ElementWidth);\n\t\t\t\t// Emit the Command Module Width\n\t\t\t\tthis.UpdateElementWidth.emit(_ElementWidth);\n\t\t\t})\n\n\t}\n/**\n * @return {?}\n */\nngDoCheck() {\n\t\t// Assign the Latest Pixel Width to the Behavior Subject\n\t\tthis.setElementPixelWidth(this.Element.nativeElement.offsetWidth);\n\t}\n/**\n * @param {?} Width\n * @return {?}\n */\ncalculateElementWidth(Width: number) {\n\t\t// Set the Width Classification to the Max\n\t\tlet /** @type {?} */ WidthClassification = this.AngularWidthObserverOptions.max;\n\t\t// Match the Width to the correct breakpoint.\n\t\tfor (let /** @type {?} */ Breakpoint in this.AngularWidthObserverOptions.breakpoints) {\n\t\t\tif (Width < this.AngularWidthObserverOptions.breakpoints[Breakpoint]) {\n\t\t\t\tWidthClassification = Breakpoint;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Return the Width Classification\n\t\treturn WidthClassification\n\t}\n/**\n * @param {?} ElementPixelWidth\n * @return {?}\n */\nsetElementPixelWidth(ElementPixelWidth: number): void {\n\t\tthis.ElementPixelWidth.next(ElementPixelWidth);\n\t}\n/**\n * @return {?}\n */\nwatchElementPixelWidth(): Observable<number> {\n\t\treturn this.ElementPixelWidth.asObservable();\n\t}\n/**\n * @param {?} ElementWidth\n * @return {?}\n */\nsetElementWidth(ElementWidth: string): void {\n\t\tthis.ElementWidth.next(ElementWidth);\n\t}\n/**\n * @return {?}\n */\nwatchElementWidth(): Observable<string> {\n\t\treturn this.ElementWidth.asObservable();\n\t}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n\tselector: '[AngularWidthObserver]',\n\texportAs: 'AngularWidthObserver'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'AngularWidthObserverOptions': [{ type: Input },],\n'UpdateElementPixelWidth': [{ type: Output },],\n'UpdateElementWidth': [{ type: Output },],\n};\n}\n\nfunction AngularWidthObserverDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAngularWidthObserverDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAngularWidthObserverDirective.ctorParameters;\n/** @type {?} */\nAngularWidthObserverDirective.propDecorators;\n/** @type {?} */\nAngularWidthObserverDirective.prototype.AngularWidthObserverOptions;\n/** @type {?} */\nAngularWidthObserverDirective.prototype.UpdateElementPixelWidth;\n/** @type {?} */\nAngularWidthObserverDirective.prototype.UpdateElementWidth;\n/** @type {?} */\nAngularWidthObserverDirective.prototype.ElementPixelWidth;\n/** @type {?} */\nAngularWidthObserverDirective.prototype.ElementWidth;\n/** @type {?} */\nAngularWidthObserverDirective.prototype.Element;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["NgModule","Output","Input","ElementRef","Directive","Subject","EventEmitter"],"mappings":";;;;;;ACCA;AAEA,IAAA,6BAAA,IAAA,YAAA;;;;IAeA,SAAA,6BAAA,CAEU,OAAS,EAFnB;QAEU,IAAV,CAAA,OAAU,GAAA,OAAA,CAAS;QAVjB,IAAF,CAAA,2BAA6B,GAEgC,IAAA,CAAK;QADhE,IAAF,CAAA,uBAAyB,GAEyB,IAAIM,iBAAA,EAAoB,CAAG;QAD3E,IAAF,CAAA,kBAAoB,GAEyB,IAAIA,iBAAA,EAAoB,CAAG;QAE/D,IAAT,CAAA,iBAAS,GAAqC,IAAID,eAAA,EAAe,CAAG;QAC3D,IAAT,CAAA,YAAS,GAAgC,IAAIA,eAAA,EAAe,CAAG;KAGzD;;;;IAIN,6BAAA,CAAA,SAAA,CAAA,QADE,GACF,YAAA;QAAA,IAAA,KAAA,GAAA,IAAA,CAsBE;;QAnBA,IAAI,CADC,sBAAC,EAAsB;aAE1B,oBADC,CAAoB,UAAC,UAAC,EAAW,SAAA,EACtC,EADoD,OAAA,UAAA,KAAe,SAAA,CACnE,EADmE,CAAU;aAEzE,SADC,CAAS,UAAA,kBAAC,EACf;YACI,OAAO,CADC,GAAC,CAAG,kBAAC,CAAkB,CAAC;;YAGhC,KAAI,CADC,uBAAC,CAAuB,IAAC,CAAI,kBAAC,CAAkB,CAAC;;YAGtD,KAAI,CADC,eAAC,CAAe,KAAC,CAAI,qBAAC,CAAqB,kBAAC,CAAkB,CAAC,CAAC;SAErE,CADC,CAAA;;QAIH,IAAI,CADC,iBAAC,EAAiB;aAErB,oBADC,CAAoB,UAAC,UAAC,EAAW,SAAA,EACtC,EADoD,OAAA,UAAA,KAAe,SAAA,CACnE,EADmE,CAAU;aAEzE,SADC,CAAS,UAAA,aAAC,EACf;YACI,OAAO,CADC,GAAC,CAAG,aAAC,CAAa,CAAC;;YAG3B,KAAI,CADC,kBAAC,CAAkB,IAAC,CAAI,aAAC,CAAa,CAAC;SAE5C,CADC,CAAA;KAGH,CAAF;;;;IAIA,6BAAA,CAAA,SAAA,CAAA,SAHE,GAGF,YAAA;;QAEE,IAAI,CAHC,oBAAC,CAAoB,IAAC,CAAI,OAAC,CAAO,aAAC,CAAa,WAAC,CAAW,CAAC;KAIlE,CAAF;;;;;IAKA,6BAAA,CAAA,SAAA,CAAA,qBALE,GAKF,UALE,KAAA,EAKF;;QAEE,qBALI,mBAAA,GAAsB,IAAA,CAAK,2BAAC,CAA2B,GAAC,CAAG;;QAO/D,KAAK,qBALI,UAAA,IAAc,IAAA,CAAK,2BAAC,CAA2B,WAAC,EAAY;YAMpE,IAAI,KALC,GAAO,IAAA,CAAK,2BAAC,CAA2B,WAAC,CAAW,UAAC,CAAU,EAAE;gBAMrE,mBAAmB,GALG,UAAA,CAAW;gBAMjC,MAAM;aACN;SACD;;QAED,OALO,mBAAA,CAAA;KAMP,CAAF;;;;;IAKA,6BAAA,CAAA,SAAA,CAAA,oBAPE,GAOF,UAPE,iBAAA,EAOF;QACE,IAAI,CAPC,iBAAC,CAAiB,IAAC,CAAI,iBAAC,CAAiB,CAAC;KAQ/C,CAAF;;;;IAIA,6BAAA,CAAA,SAAA,CAAA,sBAVE,GAUF,YAAA;QACE,OAVO,IAAA,CAAK,iBAAC,CAAiB,YAAC,EAAY,CAAE;KAW7C,CAAF;;;;;IAKA,6BAAA,CAAA,SAAA,CAAA,eAZE,GAYF,UAZE,YAAA,EAYF;QACE,IAAI,CAZC,YAAC,CAAY,IAAC,CAAI,YAAC,CAAY,CAAC;KAarC,CAAF;;;;IAIA,6BAAA,CAAA,SAAA,CAAA,iBAfE,GAeF,YAAA;QACE,OAfO,IAAA,CAAK,YAAC,CAAY,YAAC,EAAY,CAAE;KAgBxC,CAAF;;CA7FA,EAAA,CAAA,CAAA;AA+EO,6BAAP,CAAA,UAAO,GAAoC;IAgB3C,EAfE,IAAA,EAAMD,cAAA,EAAW,IAAA,EAAM,CAAA;gBAgBxB,QAAQ,EAfE,wBAAA;gBAgBV,QAAQ,EAfE,sBAAA;aAgBV,EAfC,EAAG;CAgBJ,CAfC;;;;AAED,6BAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA;IAkBD,EAAC,IAAI,EAAED,eAAU,GAAG;CACnB,CAAD,EAAC,CAAC;AAhBK,6BAAP,CAAA,cAAO,GAAyD;IAkBhE,6BAA6B,EAjBE,CAAA,EAAG,IAAA,EAAMD,UAAA,EAAM,EAAE;IAkBhD,yBAAyB,EAjBE,CAAA,EAAG,IAAA,EAAMD,WAAA,EAAO,EAAE;IAkB7C,oBAAoB,EAjBE,CAAA,EAAG,IAAA,EAAMA,WAAA,EAAO,EAAE;CAkBvC,CAjBC;;AD7FF,IAAA,0BAAA,IAAA,YAAA;IAAA,SAAA,0BAAA,GAAA;;;CAAA,EAAA,CAAA,CAAA;AAEgD,0BAAhD,CAAA,UAAgD,GAAoC;IAApF,EACE,IAAA,EAAMD,aAAA,EAAU,IAAA,EAAM,CAAA;gBAAtB,YAAY,EACE;oBAAZ,6BAA6B;iBAC9B;gBACD,OAAO,EACE;oBAAP,6BAA6B;iBAC9B;aACF,EACC,EAAG;CAAJ,CACC;;;;AAED,0BAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA,EAEA,CAFD,EAEC,CAAC;;;;;;;;;;;;;"}
