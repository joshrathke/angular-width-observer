{"version":3,"file":"angular-width-observer.umd.min.js","sources":["~/angular-width-observer/ts/angular-width-observer.directive.ts","~/angular-width-observer/ts/angular-width-observer.module.ts"],"sourcesContent":["import { Directive, EventEmitter, Input, OnInit, Output, AfterViewInit, ElementRef } from '@angular/core';\n// Import RxJs Dependencies\n\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/operator/distinctUntilChanged';\n\n// Define Command Module Width Type\nexport interface AngularWidthObserverOptions { breakpoints: object, max: string }\nexport class AngularWidthObserverDirective implements OnInit {\n\t AngularWidthObserverOptions: AngularWidthObserverOptions = null;\n\t UpdateElementPixelWidth: EventEmitter<number> = new EventEmitter<number>();\n\t UpdateElementWidth: EventEmitter<string> = new EventEmitter<string>();\nprivate ElementPixelWidth: Subject<number> = new Subject<number>();\nprivate ElementWidth: Subject<string> = new Subject<string>();\n/**\n * @param {?} Element\n */\nconstructor(\nprivate Element: ElementRef\n\t) { }\n/**\n * @return {?}\n */\nngOnInit() {\n\n\t\t// Subscribe to the Pixel Width of the Element\n\t\tthis.watchElementPixelWidth()\n\t\t\t.distinctUntilChanged((_PrevValue, _CurValue) => _PrevValue === _CurValue)\n\t\t\t.subscribe(_ElementPixelWidth => {\n\t\t\t\t// Emit the Element Pixel Width\n\t\t\t\tthis.UpdateElementPixelWidth.emit(_ElementPixelWidth);\n\t\t\t\t// Define the Command Module Width Classification\n\t\t\t\tthis.setElementWidth(this.calculateElementWidth(_ElementPixelWidth));\n\t\t\t})\n\n\t\t// Subscribe to the Width\n\t\tthis.watchElementWidth()\n\t\t\t.distinctUntilChanged((_PrevValue, _CurValue) => _PrevValue === _CurValue)\n\t\t\t.subscribe(_ElementWidth => {\n\t\t\t\t// Emit the Command Module Width\n\t\t\t\tthis.UpdateElementWidth.emit(_ElementWidth);\n\t\t\t})\n\n\t}\n/**\n * @return {?}\n */\nngDoCheck() {\n\t\t// Assign the Latest Pixel Width to the Behavior Subject\n\t\tthis.setElementPixelWidth(this.Element.nativeElement.offsetWidth);\n\t}\n/**\n * @param {?} Width\n * @return {?}\n */\ncalculateElementWidth(Width: number) {\n\t\t// Set the Width Classification to the Max\n\t\tlet /** @type {?} */ WidthClassification = this.AngularWidthObserverOptions.max;\n\t\t// Match the Width to the correct breakpoint.\n\t\tfor (let /** @type {?} */ Breakpoint in this.AngularWidthObserverOptions.breakpoints) {\n\t\t\tif (Width < this.AngularWidthObserverOptions.breakpoints[Breakpoint]) {\n\t\t\t\tWidthClassification = Breakpoint;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Return the Width Classification\n\t\treturn WidthClassification\n\t}\n/**\n * @param {?} ElementPixelWidth\n * @return {?}\n */\nsetElementPixelWidth(ElementPixelWidth: number): void {\n\t\tthis.ElementPixelWidth.next(ElementPixelWidth);\n\t}\n/**\n * @return {?}\n */\nwatchElementPixelWidth(): Observable<number> {\n\t\treturn this.ElementPixelWidth.asObservable();\n\t}\n/**\n * @param {?} ElementWidth\n * @return {?}\n */\nsetElementWidth(ElementWidth: string): void {\n\t\tthis.ElementWidth.next(ElementWidth);\n\t}\n/**\n * @return {?}\n */\nwatchElementWidth(): Observable<string> {\n\t\treturn this.ElementWidth.asObservable();\n\t}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n\tselector: '[AngularWidthObserver]',\n\texportAs: 'AngularWidthObserver'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'AngularWidthObserverOptions': [{ type: Input },],\n'UpdateElementPixelWidth': [{ type: Output },],\n'UpdateElementWidth': [{ type: Output },],\n};\n}\n\nfunction AngularWidthObserverDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAngularWidthObserverDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAngularWidthObserverDirective.ctorParameters;\n/** @type {?} */\nAngularWidthObserverDirective.propDecorators;\n/** @type {?} */\nAngularWidthObserverDirective.prototype.AngularWidthObserverOptions;\n/** @type {?} */\nAngularWidthObserverDirective.prototype.UpdateElementPixelWidth;\n/** @type {?} */\nAngularWidthObserverDirective.prototype.UpdateElementWidth;\n/** @type {?} */\nAngularWidthObserverDirective.prototype.ElementPixelWidth;\n/** @type {?} */\nAngularWidthObserverDirective.prototype.ElementWidth;\n/** @type {?} */\nAngularWidthObserverDirective.prototype.Element;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n// Import Angular Component Width Observer Directive\n\nimport { AngularWidthObserverDirective } from './angular-width-observer.directive';\nexport class AngularWidthObserverModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    AngularWidthObserverDirective\n  ],\n  exports: [\n    AngularWidthObserverDirective\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AngularWidthObserverModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAngularWidthObserverModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAngularWidthObserverModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["AngularWidthObserverDirective","Element","this","AngularWidthObserverOptions","UpdateElementPixelWidth","EventEmitter","UpdateElementWidth","ElementPixelWidth","Subject","ElementWidth","prototype","ngOnInit","_this","watchElementPixelWidth","distinctUntilChanged","_PrevValue","_CurValue","subscribe","_ElementPixelWidth","emit","setElementWidth","calculateElementWidth","watchElementWidth","_ElementWidth","ngDoCheck","setElementPixelWidth","nativeElement","offsetWidth","Width","WidthClassification","max","Breakpoint","breakpoints","next","asObservable","decorators","type","Directive","args","selector","exportAs","ctorParameters","ElementRef","propDecorators","Input","Output","AngularWidthObserverModule","NgModule","declarations","exports"],"mappings":"0YAGA,IAAAA,EAAA,WAeA,SAAAA,EAEUC,GAAAC,KAAVD,QAAUA,EAVRC,KAAFC,4BAE6D,KAD3DD,KAAFE,wBAEkD,IAAIC,EAAAA,aADpDH,KAAFI,mBAE6C,IAAID,EAAAA,aAExCH,KAATK,kBAA8C,IAAIC,EAAAA,QACzCN,KAATO,aAAyC,IAAID,EAAAA,eAO7CR,EAAAU,UAAAC,SAAA,WAAA,IAAAC,EAAAV,KAGEA,KADKW,yBAEHC,qBADqB,SAACC,EAAYC,GAAc,OAAAD,IAAeC,IAE/DC,UADU,SAAAC,GAGVN,EADKR,wBAAwBe,KAAKD,GAGlCN,EADKQ,gBAAgBR,EAAKS,sBAAsBH,MAKlDhB,KADKoB,oBAEHR,qBADqB,SAACC,EAAYC,GAAc,OAAAD,IAAeC,IAE/DC,UADU,SAAAM,GAGVX,EADKN,mBAAmBa,KAAKI,MAQjCvB,EAAAU,UAAAc,UAAA,WAEEtB,KAHKuB,qBAAqBvB,KAAKD,QAAQyB,cAAcC,cASvD3B,EAAAU,UAAAW,sBAAA,SALEO,GAOA,IALIC,EAAsB3B,KAAKC,4BAA4B2B,IAO3D,IAAK,IALIC,KAAc7B,KAAKC,4BAA4B6B,YAMvD,GAAIJ,EALQ1B,KAAKC,4BAA4B6B,YAAYD,GAAa,CAMrEF,EALsBE,EAMtB,MAIF,OALOF,GAWT7B,EAAAU,UAAAe,qBAAA,SAPElB,GAQAL,KAPKK,kBAAkB0B,KAAK1B,IAY9BP,EAAAU,UAAAG,uBAAA,WACE,OAVOX,KAAKK,kBAAkB2B,gBAgBhClC,EAAAU,UAAAU,gBAAA,SAZEX,GAaAP,KAZKO,aAAawB,KAAKxB,IAiBzBT,EAAAU,UAAAY,kBAAA,WACE,OAfOpB,KAAKO,aAAayB,kBA3E3B,GA6EOlC,EAAPmC,aACEC,KAAMC,EAAAA,UAAWC,OAgBlBC,SAfU,yBAgBVC,SAfU,2BAIVxC,EAADyC,eAAC,WAAA,QAkBAL,KAAMM,EAAAA,cAfA1C,EAAP2C,gBAkBAxC,8BAjBkCiC,KAAMQ,EAAAA,QAkBxCxC,0BAjB8BgC,KAAMS,EAAAA,SAkBpCvC,qBAjByB8B,KAAMS,EAAAA,UC1F/B,IAAAC,EAAA,kBAAA,aAAA,GAEgDA,EAAhDX,aACEC,KAAMW,EAAAA,SAAUT,OAAhBU,cACEhD,GAEFiD,SACEjD,OAMH8C,EAADL,eAAC,WAAA"}
