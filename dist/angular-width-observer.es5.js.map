{"version":3,"file":"angular-width-observer.es5.js","sources":["ts/angular-width-observer.ts","ts/ts/angular-width-observer.module.ts","ts/ts/angular-width-observer.directive.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {AngularWidthObserverModule} from './public_api';\n\nexport {AngularWidthObserverDirective as Éµa} from './ts/angular-width-observer.directive';","import { NgModule } from '@angular/core';\n// Import Angular Component Width Observer Directive\n\nimport { AngularWidthObserverDirective } from './angular-width-observer.directive';\nexport class AngularWidthObserverModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    AngularWidthObserverDirective\n  ],\n  exports: [\n    AngularWidthObserverDirective\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AngularWidthObserverModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAngularWidthObserverModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAngularWidthObserverModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, EventEmitter, Input, OnInit, Output, AfterViewInit, ElementRef } from '@angular/core';\n// Import RxJs Dependencies\n\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/operator/distinctUntilChanged';\n\n// Define Command Module Width Type\nexport interface AngularWidthObserverOptions { breakpoints: object, max: string }\nexport class AngularWidthObserverDirective implements OnInit {\n\t AngularWidthObserverOptions: AngularWidthObserverOptions = null;\n\t UpdateElementPixelWidth: EventEmitter<number> = new EventEmitter<number>();\n\t UpdateElementWidth: EventEmitter<string> = new EventEmitter<string>();\nprivate ElementPixelWidth: Subject<number> = new Subject<number>();\nprivate ElementWidth: Subject<string> = new Subject<string>();\n/**\n * @param {?} Element\n */\nconstructor(\nprivate Element: ElementRef\n\t) { }\n/**\n * @return {?}\n */\nngOnInit() {\n\n\t\t// Subscribe to the Pixel Width of the Element\n\t\tthis.watchElementPixelWidth()\n\t\t\t.distinctUntilChanged((_PrevValue, _CurValue) => _PrevValue === _CurValue)\n\t\t\t.subscribe(_ElementPixelWidth => {\n\t\t\t\t// Emit the Element Pixel Width\n\t\t\t\tthis.UpdateElementPixelWidth.emit(_ElementPixelWidth);\n\t\t\t\t// Define the Command Module Width Classification\n\t\t\t\tthis.setElementWidth(this.calculateElementWidth(_ElementPixelWidth));\n\t\t\t})\n\n\t\t// Subscribe to the Width\n\t\tthis.watchElementWidth()\n\t\t\t.distinctUntilChanged((_PrevValue, _CurValue) => _PrevValue === _CurValue)\n\t\t\t.subscribe(_ElementWidth => {\n\t\t\t\t// Emit the Command Module Width\n\t\t\t\tthis.UpdateElementWidth.emit(_ElementWidth);\n\t\t\t})\n\n\t}\n/**\n * @return {?}\n */\nngDoCheck() {\n\t\t// Assign the Latest Pixel Width to the Behavior Subject\n\t\tthis.setElementPixelWidth(this.Element.nativeElement.offsetWidth);\n\t}\n/**\n * @param {?} Width\n * @return {?}\n */\ncalculateElementWidth(Width: number) {\n\t\t// Set the Width Classification to the Max\n\t\tlet /** @type {?} */ WidthClassification = this.AngularWidthObserverOptions.max;\n\t\t// Match the Width to the correct breakpoint.\n\t\tfor (let /** @type {?} */ Breakpoint in this.AngularWidthObserverOptions.breakpoints) {\n\t\t\tif (Width < this.AngularWidthObserverOptions.breakpoints[Breakpoint]) {\n\t\t\t\tWidthClassification = Breakpoint;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Return the Width Classification\n\t\treturn WidthClassification\n\t}\n/**\n * @param {?} ElementPixelWidth\n * @return {?}\n */\nsetElementPixelWidth(ElementPixelWidth: number): void {\n\t\tthis.ElementPixelWidth.next(ElementPixelWidth);\n\t}\n/**\n * @return {?}\n */\nwatchElementPixelWidth(): Observable<number> {\n\t\treturn this.ElementPixelWidth.asObservable();\n\t}\n/**\n * @param {?} ElementWidth\n * @return {?}\n */\nsetElementWidth(ElementWidth: string): void {\n\t\tthis.ElementWidth.next(ElementWidth);\n\t}\n/**\n * @return {?}\n */\nwatchElementWidth(): Observable<string> {\n\t\treturn this.ElementWidth.asObservable();\n\t}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n\tselector: '[AngularWidthObserver]',\n\texportAs: 'AngularWidthObserver'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'AngularWidthObserverOptions': [{ type: Input },],\n'UpdateElementPixelWidth': [{ type: Output },],\n'UpdateElementWidth': [{ type: Output },],\n};\n}\n\nfunction AngularWidthObserverDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAngularWidthObserverDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAngularWidthObserverDirective.ctorParameters;\n/** @type {?} */\nAngularWidthObserverDirective.propDecorators;\n/** @type {?} */\nAngularWidthObserverDirective.prototype.AngularWidthObserverOptions;\n/** @type {?} */\nAngularWidthObserverDirective.prototype.UpdateElementPixelWidth;\n/** @type {?} */\nAngularWidthObserverDirective.prototype.UpdateElementWidth;\n/** @type {?} */\nAngularWidthObserverDirective.prototype.ElementPixelWidth;\n/** @type {?} */\nAngularWidthObserverDirective.prototype.ElementWidth;\n/** @type {?} */\nAngularWidthObserverDirective.prototype.Element;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["Subject"],"mappings":"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"}
